module memory_model #(
  parameter ADDR_WIDTH = 2,
  parameter DATA_WIDTH = 8)
  (
  	input 	logic											clk,
  
    //control signal
    input		logic [ADDR_WIDTH-1:0]		addr,
  	input 	logic											wr_en,
  	input		logic					 						rd_en,
    //data signals
    input	logic	[DATA_WIDTH-1:0]			wdata,
    output	logic [DATA_WIDTH-1:0]		rdata
);
  
  //output register
  reg [DATA_WIDTH-1:0] r_data;
  
assign rdata = r_data;	
  //memory
  reg [DATA_WIDTH-1:0] mem [2**ADDR_WIDTH-1:0];
  
  //write logic
  always@(posedge clk)
    if(wr_en)
      mem[addr] <= wdata;
  //read logic
  always@(posedge clk)
    if(rd_en)
      r_data <= mem[addr];
endmodule : memory_model
      
